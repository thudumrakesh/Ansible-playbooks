
   # VPC
---

- hosts: localhost
  become: yes
  tasks:
    - name: Create VPC
      ec2_vpc_net:
        cidr_block: "10.0.0.0/16"
        name: rakeshv:q!pc
        region: "eu-north-1"
        state: present
      register: vpc_result

    # Create Internet Gateway
    - ec2_vpc_igw:
        vpc_id: "{{ vpc_result.vpc.id }}"
        region: "eu-north-1"
        state: present
        tags:
          Name: rakeshigw
      register: igw_result

    # Create subnets
    - ec2_vpc_subnet:
        vpc_id: "{{ vpc_result.vpc.id }}"
        region: "eu-north-1"
        az: "eu-north-1a"
        state: present
        cidr: "10.0.1.0/24"
        map_public: yes
        resource_tags:
          Name: pubsubnet
      register: pubsubnet_result

    - ec2_vpc_subnet:
        vpc_id: "{{ vpc_result.vpc.id }}"
        cidr: "10.0.2.0/24"
        az: "eu-north-1b"
        region: "eu-north-1"
        state: present
        map_public: no
        resource_tags:
          Name: pvtsubnet
      register: pvtsubnet_result

    # Create route tables
    - ec2_vpc_route_table:
        vpc_id: "{{ vpc_result.vpc.id }}"
        region: "eu-north-1"
        state: present
        tags:
          Name: route1
        subnets: "{{ pubsubnet_result.subnet.id }}"
        routes:
          - dest: "0.0.0.0/0"
            gateway_id: "{{ igw_result.gateway_id }}"
      register: pubroute_table_result

    - ec2_vpc_route_table:
        vpc_id: "{{ vpc_result.vpc.id }}"
        region: "eu-north-1"
        state: present
        tags:
          Name: route2
        subnets: ["{{ pvtsubnet_result.subnet.id }}"]

    # Security group
    - ec2_group:
        vpc_id: "{{ vpc_result.vpc.id }}"
        region: "eu-north-1"
        name: ansible
        description: allow
        tags:
          Name: ansible
        rules:
          - proto: tcp
            from_port: 80
            to_port: 80
            cidr_ip: "0.0.0.0/0"
          - proto: tcp
            from_port: 22
            to_port: 22
            cidr_ip: "0.0.0.0/0"
        rules_egress:
          - proto: all
            cidr_ip: 0.0.0.0/0
      register: security_groups

    # EC2 instance
    - ec2:
        image: "ami-0f0ec0d37d04440e3"
        instance_type: "t3.micro"
        region: "eu-north-1"
        wait: true
        count: 1
        state: present
        vpc_subnet_id: "{{ pubsubnet_result.subnet.id }}"
        assign_public_ip: yes
        group_id: "{{ security_groups.group_id }}"
      register: ec2_result
